# Generated by Django 5.2.7 on 2025-10-14 13:13

import datetime
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0002_barber_customer_delete_profile'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Service name (e.g., Haircut)', max_length=50, unique=True)),
                ('price', models.DecimalField(decimal_places=2, help_text='Price for this service', max_digits=6)),
                ('duration', models.PositiveIntegerField(default=30, help_text='Default duration in minutes')),
                ('description', models.TextField(blank=True, help_text='Service description')),
                ('is_active', models.BooleanField(default=True, help_text='Is this service available for booking')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Service Type',
                'verbose_name_plural': 'Service Types',
                'ordering': ['name'],
            },
        ),
        migrations.AlterModelOptions(
            name='barber',
            options={'verbose_name': 'Barber', 'verbose_name_plural': 'Barbers'},
        ),
        migrations.AlterModelOptions(
            name='customer',
            options={'ordering': ['user__first_name', 'user__last_name'], 'verbose_name': 'Customer', 'verbose_name_plural': 'Customers'},
        ),
        migrations.RemoveField(
            model_name='barber',
            name='shop_name',
        ),
        migrations.RemoveField(
            model_name='customer',
            name='preferred_style',
        ),
        migrations.AddField(
            model_name='barber',
            name='average_rating',
            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=3),
        ),
        migrations.AddField(
            model_name='barber',
            name='bio',
            field=models.TextField(blank=True, help_text='Professional biography and specialties'),
        ),
        migrations.AddField(
            model_name='barber',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='barber',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='barber',
            name='is_available_for_booking',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='barber',
            name='phone_number',
            field=models.CharField(blank=True, help_text='Contact phone number', max_length=15, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')]),
        ),
        migrations.AddField(
            model_name='barber',
            name='profile_picture',
            field=models.ImageField(blank=True, null=True, upload_to='barber_profiles/'),
        ),
        migrations.AddField(
            model_name='barber',
            name='total_ratings',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='barber',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=datetime.datetime(2025, 10, 14, 13, 13, 34, 276360, tzinfo=datetime.timezone.utc)),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='customer',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='barber',
            name='experience_years',
            field=models.IntegerField(default=0, help_text='Years of experience'),
        ),
        migrations.AlterField(
            model_name='barber',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='barber_profile', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='customer',
            name='phone_number',
            field=models.CharField(blank=True, help_text='Contact phone number', max_length=15, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')]),
        ),
        migrations.AlterField(
            model_name='customer',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='customer_profile', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Date for this schedule')),
                ('start_time', models.TimeField(help_text='Start time for availability')),
                ('end_time', models.TimeField(help_text='End time for availability')),
                ('schedule_type', models.CharField(choices=[('regular', 'Regular Hours'), ('extended', 'Extended Hours'), ('special', 'Special Event'), ('break', 'Break Time'), ('unavailable', 'Unavailable')], default='regular', max_length=20)),
                ('slot_duration', models.PositiveIntegerField(default=30, help_text='Duration of each appointment slot in minutes')),
                ('max_appointments', models.PositiveIntegerField(blank=True, default=None, help_text='Maximum appointments for this time slot', null=True)),
                ('is_available', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True, help_text='Special notes for this schedule')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('barber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='main.barber')),
            ],
            options={
                'verbose_name': 'Schedule',
                'verbose_name_plural': 'Schedules',
                'ordering': ['date', 'start_time'],
                'unique_together': {('barber', 'date', 'start_time', 'end_time')},
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_datetime', models.DateTimeField(help_text='Date and time of the appointment')),
                ('duration', models.PositiveIntegerField(default=30, help_text='Duration in minutes')),
                ('service_description', models.TextField(blank=True, help_text='Specific requirements or notes')),
                ('price', models.DecimalField(decimal_places=2, help_text='Price for this reservation', max_digits=6)),
                ('status', models.CharField(choices=[('pending', 'Pending Confirmation'), ('confirmed', 'Confirmed'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('no_show', 'No Show')], default='pending', max_length=20)),
                ('cancellation_reason', models.TextField(blank=True, null=True)),
                ('cancelled_at', models.DateTimeField(blank=True, null=True)),
                ('rating', models.PositiveIntegerField(blank=True, help_text='Rating from 1-5', null=True)),
                ('feedback', models.TextField(blank=True, help_text='Customer feedback')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('confirmation_sent', models.BooleanField(default=False)),
                ('reminder_sent', models.BooleanField(default=False)),
                ('barber', models.ForeignKey(help_text='Barber providing the service', on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='main.barber')),
                ('cancelled_by', models.ForeignKey(blank=True, help_text='Who cancelled this reservation', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cancelled_reservations', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(help_text='Customer making the reservation', on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='main.customer')),
                ('service_type', models.ForeignKey(help_text='Type of service requested', on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='main.servicetype')),
            ],
            options={
                'verbose_name': 'Reservation',
                'verbose_name_plural': 'Reservations',
                'ordering': ['-appointment_datetime'],
                'indexes': [models.Index(fields=['appointment_datetime'], name='main_reserv_appoint_fae3f1_idx'), models.Index(fields=['status'], name='main_reserv_status_01eb99_idx'), models.Index(fields=['barber', 'appointment_datetime'], name='main_reserv_barber__396841_idx')],
            },
        ),
    ]
